[{"/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/index.js":"1","/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/App.js":"2","/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/reportWebVitals.js":"3","/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/UserLogout.js":"4","/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/UserSignup.js":"5","/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/components/newPost.js":"6","/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/components/home.js":"7","/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/components/aboutMe.js":"8","/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/components/Post.js":"9","/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/components/contactMe.js":"10","/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/components/navBar.js":"11","/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/components/login.js":"12"},{"size":2529,"mtime":1622352596283,"results":"13","hashOfConfig":"14"},{"size":1350,"mtime":1620471293409,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1617304420363,"results":"16","hashOfConfig":"14"},{"size":1402,"mtime":1622352723629,"results":"17","hashOfConfig":"14"},{"size":3595,"mtime":1622033793297,"results":"18","hashOfConfig":"14"},{"size":1083,"mtime":1623349272460,"results":"19","hashOfConfig":"14"},{"size":1348,"mtime":1618943536519,"results":"20","hashOfConfig":"14"},{"size":127,"mtime":1618950314392,"results":"21","hashOfConfig":"14"},{"size":1585,"mtime":1621758538623,"results":"22","hashOfConfig":"14"},{"size":130,"mtime":1618950814383,"results":"23","hashOfConfig":"14"},{"size":7610,"mtime":1619091061069,"results":"24","hashOfConfig":"14"},{"size":3751,"mtime":1622352723634,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1bod3zt",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"29"},"/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/index.js",["55"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Posts from \"./components/Post\";\nimport Home from \"./components/home\";\nimport NewPost from \"./components/newPost\";\nimport AboutMe from \"./components/aboutMe\";\nimport ContactMe from \"./components/contactMe\";\nimport InputWithIcon from './components/login';\nimport PersistentDrawerLeft from \"./components/navBar\";\nimport {UserSignup} from \"./UserSignup\";\nimport UserLogout from \"./UserLogout\";\n\n\nlet app = (\n    <Router>\n        <div>\n            <div className=\"title\">\n                <section className=\"table\">\n                    <App page=\"/\" name=\"left_title\" id=\"home\" path=\"#Home\" content=\"Home\" />\n                    <App page=\"/about_me\" name=\"left_title\" id=\"aboutme\" content=\"About Me\"/>\n                    <App page=\"/new_post\" name=\"left_title\" id=\"nan1\" content=\"New Post\"/>\n                    <App page=\"/Post\" name=\"left_title\" id=\"nan2\" content=\"Post\"/>\n                    <App page=\"/contact_me\" name=\"left_title\" content=\"Contact Me\"/>\n                    <App page=\"/login\" name=\"right_title\" id=\"login\" content=\"Login\"/>\n                    <App page=\"/signup\" name=\"right_title\" id=\"login\" content=\"Signup\"/>\n                </section>\n            </div>\n            <Switch>\n                <Route path=\"/signup\">\n                    <UserSignup />\n                </Route>\n                <Route path=\"/login\">\n                    <InputWithIcon />\n                    <UserLogout />\n                </Route>\n                <Route path=\"/contact_me\">\n                    <ContactMe />\n                </Route>\n                <Route path=\"/Post\">\n                    <Posts data =' '/>\n                </Route>\n                <Route path=\"/new_post\">\n                    <NewPost />\n                </Route>\n                <Route path=\"/about_me\">\n                    <AboutMe />\n                </Route>\n                <Route path=\"/\">\n                    <Home />\n                </Route>\n            </Switch>\n        </div>\n    </Router>\n);\n\n\nReactDOM.render(\n    app,\n    document.getElementById('root1')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["56","57"],"/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/App.js",[],"/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/reportWebVitals.js",[],"/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/UserLogout.js",[],"/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/UserSignup.js",["58"],"import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport {Login} from \"./components/login\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\nimport {Button} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(3),\n    },\n    Button:{\n        backgroundColor:\"#DC143C\",\n        margin: theme.spacing(3),\n        color:\"#E0FFFF\",\n    },\n}));\nlet Signup = (props)=> {\n    const classes = useStyles();\n    return (\n        <div>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"space-evenly\"\n                alignItems=\"center\"\n            >\n                <h1 className={classes.margin}>Singup</h1>\n                <FormControl className={classes.margin}>\n                    <InputLabel htmlFor=\"input-with-icon-adornment\">User Name</InputLabel>\n                    <Input\n                        id=\"input-with-icon-adornment\"\n                        placeholder=\" User Name\"\n                        label=\" User Name\"\n                        onChange={props.user}\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                                <AccountCircle/>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n                <TextField\n                    className={classes.margin}\n                    id=\"input-with-icon-textfield\"\n                    placeholder=\"Password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    position=\"center\"\n                    onChange={props.pass}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <VpnKeyIcon/>\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n                <Button id=\"signupButton\" className={classes.Button} variant=\"contained\" onClick={props.log}>\n                    Signup\n                </Button>\n                <div>\n                    {props.respons}\n                </div>\n                <Link to = \"./signup\" className={classes.margin} >Forgot Username / password</Link>\n            </Grid>\n        </div>\n\n    )\n}\n\nexport function UserSignup() {\n\n    const [user,setUser] = useState(null);\n    const [pass,setPass] = useState(null);\n    const [resp,setResp] = useState(null);\n    let changeUser = (e)=>{\n        setUser(e.target.value);\n    }\n    let changePass = (e)=>{\n        setPass(e.target.value);\n    }\n    let doSignup = ()=>{\n        let url = '/api/signup';\n        let data = {\n            user: user,\n            pass: pass,\n        }\n        axios.post(url,data).then((res)=>{\n            setResp(\"Success: user signup.\");\n\n        }).catch((err)=>{\n            setResp(\"Error: failed to signup.\");\n        });\n\n    }\n    return (\n        <Signup respons ={resp?resp:null} user = {changeUser} pass = {changePass} log = {doSignup}/>\n    );\n\n}","/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/components/newPost.js",[],"/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/components/home.js",[],"/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/components/aboutMe.js",[],"/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/components/Post.js",["59","60","61"],"import '../App.css';\nimport React ,{useState,useEffect} from 'react';\nimport {App, Left} from \"../App\";\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nlet create_obj_list = (data)=>{\n    let tempPostsData = [];\n    for (let post in data) {\n        let posts = {\n            id: 'Blog_post_#' + data[post].post_id,\n            className: \"inner_table\",\n            classname: \"inner_text\",\n            post: data[post].post_id,\n            order: data[post].upload_time,\n            number: data[post].post_id,\n            author: data[post].author,\n            text: data[post].title + \"\\n\" + data[post].body\n        }\n        tempPostsData.push(posts);\n    }\n    return tempPostsData;\n}\nconst Post = props => {\n    const {post} = props;\n    return <p><Left id={post.id} className={post.className} classname={post.classname} post={post.post}\n                    order={post.order}\n                    number={post.number} author={post.author} text={post.text}/></p>\n};\n\n\nlet Posts = (props)=> {\n    const [Data, setData] = useState(props.data);\n    let Get_all_posts =  ()=> {\n        let url = '/api/posts';\n        const res = axios.get(url);\n        res.then((resalts) => {\n            console.log(resalts.data);\n            console.log(Data);\n            setData(resalts.data);\n\n        })\n    }\n    useEffect(()=>{return Get_all_posts()},[]);\n    let post_list = create_obj_list(Data);\n    const listItems = post_list.map((postItem) =>\n        <Post post={postItem}/>\n    );\n    return (<div>\n            {listItems}\n            </div>);\n}\nexport default Posts;","/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/components/contactMe.js",[],"/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/components/navBar.js",[],"/Users/asafd/Desktop/full-stack-projects/fullStack/projects/web-page/src/components/login.js",["62","63","64"],"import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport {Button, IconButton} from \"@material-ui/core\";\nimport \"../App.css\";\nimport {Link} from \"react-router-dom\";\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport axios from \"axios\";\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(3),\n    },\n    Button:{\n        backgroundColor:\"#8FBC8B\",\n        margin: theme.spacing(3),\n        color:\"#E0FFFF\",\n    },\n}));\nexport let Login = (props)=> {\n    const classes = useStyles();\n    return (\n        <div>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"space-evenly\"\n                alignItems=\"center\"\n            >\n                <h1 className={classes.margin}>Login</h1>\n                <FormControl className={classes.margin}>\n                    <InputLabel htmlFor=\"input-with-icon-adornment\">User Name</InputLabel>\n                    <Input\n                        id=\"input-with-icon-adornment\"\n                        placeholder=\" User Name\"\n                        label=\" User Name\"\n                        onChange={props.user}\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                                <AccountCircle/>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n                <TextField\n                    className={classes.margin}\n                    id=\"input-with-icon-textfield\"\n                    placeholder=\"Password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    position=\"center\"\n                    onChange={props.pass}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <VpnKeyIcon/>\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n                <Button id=\"loginButton\" className={classes.Button} variant=\"contained\" onClick={props.log}>\n                    Login\n                </Button>\n                <div>\n                    {props.respons}\n                </div>\n            </Grid>\n        </div>\n\n    )\n}\n\nexport default function InputWithIcon() {\n\n    const [user,setUser] = useState(null);\n    const [pass,setPass] = useState(null);\n    const [resp,setResp] = useState(null);\n    let changeUser = (e)=>{\n        setUser(e.target.value);\n    }\n    let changePass = (e)=>{\n        setPass(e.target.value);\n    }\n    let doLogin = ()=>{\n      let url = '/api/login';\n      let data = {\n          user: user,\n          pass: pass,\n      }\n      axios.post(url,data).then((res)=>{\n          setResp(\"Success: user login.\");\n          let url_new = '/api/logout';\n          let logout_data = {\n              status: 'false',\n          }\n          axios.post(url_new, logout_data).then((res) => {\n\n          }).catch((err) => {\n              setResp(\"Error: failed to login.\");\n          })\n\n      }).catch((err)=>{\n          setResp(\"Error: failed to login.\");\n      });\n\n    }\n    return (\n        <Login respons ={resp?resp:null} user = {changeUser} pass = {changePass} log = {doLogin}/>\n    );\n\n}\n",{"ruleId":"65","severity":1,"message":"66","line":17,"column":8,"nodeType":"67","messageId":"68","endLine":17,"endColumn":28},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"65","severity":1,"message":"73","line":3,"column":9,"nodeType":"67","messageId":"68","endLine":3,"endColumn":14},{"ruleId":"65","severity":1,"message":"74","line":3,"column":9,"nodeType":"67","messageId":"68","endLine":3,"endColumn":12},{"ruleId":"65","severity":1,"message":"75","line":5,"column":9,"nodeType":"67","messageId":"68","endLine":5,"endColumn":13},{"ruleId":"76","severity":1,"message":"77","line":43,"column":44,"nodeType":"78","endLine":43,"endColumn":46,"suggestions":"79"},{"ruleId":"65","severity":1,"message":"80","line":1,"column":16,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"81","line":10,"column":17,"nodeType":"67","messageId":"68","endLine":10,"endColumn":27},{"ruleId":"65","severity":1,"message":"75","line":12,"column":9,"nodeType":"67","messageId":"68","endLine":12,"endColumn":13},"no-unused-vars","'PersistentDrawerLeft' is defined but never used.","Identifier","unusedVar","no-native-reassign",["82"],"no-negated-in-lhs",["83"],"'Login' is defined but never used.","'App' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Get_all_posts'. Either include it or remove the dependency array.","ArrayExpression",["84"],"'useEffect' is defined but never used.","'IconButton' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [Get_all_posts]",{"range":"87","text":"88"},[1362,1364],"[Get_all_posts]"]