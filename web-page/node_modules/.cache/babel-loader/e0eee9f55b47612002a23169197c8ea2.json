{"ast":null,"code":"var _jsxFileName = \"/Users/asafd/Desktop/full-stack-projects/fullStack/hw3/web-page/src/components/Post.js\";\nimport '../App.css';\nimport React from 'react';\nimport { Left } from \"../App\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function get_all_posts() {\n  let tempPostsData = [];\n  let url = '/posts';\n  axios.get(url).then(res => {\n    let data = res.data;\n\n    for (let post in data) {\n      alert(post);\n      let posts = {\n        id: 'Blog_post_#' + data[post].post_id,\n        className: \"inner_table\",\n        classname: \"inner_text\",\n        post: data[post].post_id,\n        order: data[post].upload_time,\n        number: data[post].post_id,\n        author: data[post].author,\n        text: data[post].title + \"\\n\" + data[post].body\n      };\n      tempPostsData.push(posts);\n    }\n  });\n  postsData = await tempPostsData;\n}\n\nexport let postsData = get_all_posts();\nalert(postsData[0].id);\nexport const postsData1 = [{\n  id: \"Blog_post_#1\",\n  className: \"inner_table\",\n  classname: \"inner_text\",\n  post: \"1\",\n  order: \"first\",\n  number: \"1\",\n  author: \"israel\",\n  text: /*#__PURE__*/_jsxDEV(\"span\", {\n    id: \"firstBlog\",\n    children: [\"and how to write a new post in my\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 31\n    }, this), \"blog, you find it \", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#here\",\n      children: \"here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 11\n  }, this)\n}, {\n  id: \"Blog_post_#2\",\n  className: \"inner_table\",\n  classname: \"inner_text\",\n  post: \"2\",\n  order: \"second\",\n  number: \"2\",\n  author: \"Joe\",\n  text: \"\"\n}, {\n  id: \"Blog_post_#3\",\n  className: \"inner_table\",\n  classname: \"inner_text\",\n  post: \"3\",\n  order: \"third\",\n  number: \"3\",\n  author: \"israel\",\n  text: \"\"\n}];\nexport const PostList = props => {\n  const {\n    posts\n  } = props;\n  const listItems = posts.map(postItem => /*#__PURE__*/_jsxDEV(Post, {\n    post: postItem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 12\n  }, this);\n};\n_c = PostList;\nexport const Post = props => {\n  const {\n    post\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: /*#__PURE__*/_jsxDEV(Left, {\n      id: post.id,\n      className: post.className,\n      classname: post.classname,\n      post: post.post,\n      order: post.order,\n      number: post.number,\n      author: post.author,\n      text: post.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 12\n  }, this);\n};\n_c2 = Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostList\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"sources":["/Users/asafd/Desktop/full-stack-projects/fullStack/hw3/web-page/src/components/Post.js"],"names":["React","Left","axios","get_all_posts","tempPostsData","url","get","then","res","data","post","alert","posts","id","post_id","className","classname","order","upload_time","number","author","text","title","body","push","postsData","postsData1","PostList","props","listItems","map","postItem","Post"],"mappings":"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","sourcesContent":["import '../App.css';\nimport React from 'react';\nimport {Left} from \"../App\";\nimport axios from 'axios';\n\n async function get_all_posts (){\n    let tempPostsData = [];\n    let url = '/posts';\n    axios.get(url).then((res)=> {\n        let data = res.data\n        for (let post in data) {\n            alert(post);\n            let posts = {\n                id: 'Blog_post_#' + data[post].post_id,\n                className: \"inner_table\",\n                classname: \"inner_text\",\n                post: data[post].post_id,\n                order: data[post].upload_time,\n                number: data[post].post_id,\n                author: data[post].author,\n                text: data[post].title + \"\\n\" + data[post].body\n            }\n            tempPostsData.push(posts);\n        }\n    })\n    postsData=await tempPostsData;\n    }\nexport let postsData = get_all_posts()\nalert(postsData[0].id)\nexport const postsData1 = [{\n    id: \"Blog_post_#1\",\n    className: \"inner_table\",\n    classname: \"inner_text\",\n    post: \"1\",\n    order: \"first\",\n    number: \"1\",\n    author: \"israel\",\n    text: <span id=\"firstBlog\">and how to write a new\n                    post in my<br/>blog,\n                    you find it <a href='#here'>here</a></span>\n},\n    {\n        id: \"Blog_post_#2\",\n        className: \"inner_table\",\n        classname: \"inner_text\",\n        post: \"2\",\n        order: \"second\",\n        number: \"2\",\n        author: \"Joe\",\n        text: \"\"\n    },\n    {\n        id: \"Blog_post_#3\",\n        className: \"inner_table\",\n        classname: \"inner_text\",\n        post: \"3\",\n        order: \"third\",\n        number: \"3\",\n        author: \"israel\",\n        text: \"\"\n    }];\nexport const PostList = props => {\n    const {posts} = props;\n    const listItems = posts.map((postItem) =>\n        <Post post={postItem}/>\n    );\n    return <div>{listItems}</div>\n};\nexport const Post = props => {\n    const {post} = props;\n    return <p><Left id={post.id} className={post.className} classname={post.classname} post={post.post}\n                    order={post.order}\n                    number={post.number} author={post.author} text={post.text}/></p>\n};\n"]},"metadata":{},"sourceType":"module"}